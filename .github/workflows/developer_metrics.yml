name: Developer metrics for PR

on:
  workflow_call:
    inputs:
      API_KEY_GIT:
        description: 'API Key for GITHUB.'
        required: true
        type: string

jobs:
  job1:
    name: pr_creation_duration
    runs-on: ubuntu-latest
    steps:
      - run: echo "The name of the branch is ${{ github.ref }}"
      - uses: actions/checkout@v2
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: python -m pip install python-dateutil
      - run: python actions/pr_commit_request.py ${{ github.event.pull_request.number }} ${{ github.repository }}
        env:
          API_KEY: ${{ secrets.API_TOKEN_GITHUB }}
      - run: echo "üçè This job's status is ${{ job.status }}."

  job2:
    name: lines_of_code_changed
    runs-on: ubuntu-latest
    steps:
      - run: echo "The name of the branch is ${{ github.ref }}"
      - uses: actions/checkout@v2
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: python -m pip install python-dateutil
      - run: python actions/pr_lines_changed.py ${{ github.event.pull_request.number }} ${{ github.repository }}
        env:
          API_KEY: ${{ secrets.API_TOKEN_GITHUB }}
      - run: echo "üçè This job's status is ${{ job.status }}."

  job3:
    name: developer_metrics
    runs-on: ubuntu-latest
    needs: [job1, job2]
    if: github.event.pull_request.merged == true
    steps:
      - run: echo "The name of the branch is ${{ github.ref }}"
      - uses: actions/checkout@v2
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: python -m pip install python-dateutil
      - run: python -m pip install pytablewriter
      - run: python actions/developer_metrics.py ${{ github.event.pull_request.number }} ${{ github.repository }} ${{ needs.job4.outputs.pylint_status }}
        env:
          API_KEY: ${{ secrets.API_TOKEN_GITHUB }}
      - run: echo "üçè This job's status is ${{ job.status }}."